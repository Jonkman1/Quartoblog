{
  "hash": "8b2f2f95461ba23359e8fbea69e03133",
  "result": {
    "markdown": "---\ntitle: \"EDA on salary survey in different countries\"\nauthor: \"Franziska Yasrebi-de Kom\"\ndate: \"2023-01-24\"\ncategories: [exploration, visualization]\nimage: \"Screenshot.png\"\n---\n\n\n\n## Introduction\n\nIn this tutorial we will do some descriptive analysis on a salary survey in different countries and some background variables of the participants [@yasrebi-de_kom_nsc-r_2023].\n\n::: column-margin\nThank you to Wim Bernasco who provided detailed feedback on the script and supervision on preparing this session.\n:::\n\n## Getting started\n\nBut let us first make our working environment clean and remove the environment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(list = ls())\n```\n:::\n\n\nWe need two packages here. Install the needed libraries if necessary.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Install needed libraries\n#install.packages(\"tidyverse\")\n#install.packages(\"priceR\")\n```\n:::\n\n\nThen we have to open the needed packages. We need `tidyverse` for data wrangling functions (e.g. `readr`) and we need `priceR` for handling price and currency data necessary for this dataset and the questions you have to answer.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)   \nlibrary(priceR)      \n```\n:::\n\n\nNow you can load the salary survey data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-05-18/survey.csv')\n```\n:::\n\n\n## Analyses\n\n### Question 1: What kind of variables are in the dataset?\n\n::: callout-note\n'\\|\\>' is equal to '%\\>%', the latter is included in tidyverse\n:::\n\nLet us look first at the names of the variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey |> names() \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"timestamp\"                               \n [2] \"how_old_are_you\"                         \n [3] \"industry\"                                \n [4] \"job_title\"                               \n [5] \"additional_context_on_job_title\"         \n [6] \"annual_salary\"                           \n [7] \"other_monetary_comp\"                     \n [8] \"currency\"                                \n [9] \"currency_other\"                          \n[10] \"additional_context_on_income\"            \n[11] \"country\"                                 \n[12] \"state\"                                   \n[13] \"city\"                                    \n[14] \"overall_years_of_professional_experience\"\n[15] \"years_of_experience_in_field\"            \n[16] \"highest_level_of_education_completed\"    \n[17] \"gender\"                                  \n[18] \"race\"                                    \n```\n:::\n:::\n\n\nAnd now some information on the variables. What do you see.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey |> dplyr::glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 26,232\nColumns: 18\n$ timestamp                                <chr> \"4/27/2021 11:02:10\", \"4/27/2~\n$ how_old_are_you                          <chr> \"25-34\", \"25-34\", \"25-34\", \"2~\n$ industry                                 <chr> \"Education (Higher Education)~\n$ job_title                                <chr> \"Research and Instruction Lib~\n$ additional_context_on_job_title          <chr> NA, NA, NA, NA, NA, NA, NA, \"~\n$ annual_salary                            <dbl> 55000, 54600, 34000, 62000, 6~\n$ other_monetary_comp                      <dbl> 0, 4000, NA, 3000, 7000, NA, ~\n$ currency                                 <chr> \"USD\", \"GBP\", \"USD\", \"USD\", \"~\n$ currency_other                           <chr> NA, NA, NA, NA, NA, NA, NA, N~\n$ additional_context_on_income             <chr> NA, NA, NA, NA, NA, NA, NA, N~\n$ country                                  <chr> \"United States\", \"United King~\n$ state                                    <chr> \"Massachusetts\", NA, \"Tenness~\n$ city                                     <chr> \"Boston\", \"Cambridge\", \"Chatt~\n$ overall_years_of_professional_experience <chr> \"5-7 years\", \"8 - 10 years\", ~\n$ years_of_experience_in_field             <chr> \"5-7 years\", \"5-7 years\", \"2 ~\n$ highest_level_of_education_completed     <chr> \"Master's degree\", \"College d~\n$ gender                                   <chr> \"Woman\", \"Non-binary\", \"Woman~\n$ race                                     <chr> \"White\", \"White\", \"White\", \"W~\n```\n:::\n:::\n\n\nWe have 26,232 rows and 19 columns. All variables, except the variables 'annual_salary' and 'other_monetary_comp', are text ('strings' in SPSS speak).\n\n### Question 2: How many people participated in the survey?\\*\\*\n\nYou can count the number of rows.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey |> nrow()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 26232\n```\n:::\n:::\n\n\nUsing `glimpse` already indicated that there are 26.232, since one row often means one participant.\n\n### Question 3: what was the distribution of the ages of the people that participated in the survey?\n\nLet us first count the age groups using variable 'how_old_are_you'.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey |> count(how_old_are_you)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 x 2\n  how_old_are_you     n\n  <chr>           <int>\n1 18-24            1015\n2 25-34           11748\n3 35-44            9398\n4 45-54            3042\n5 55-64             931\n6 65 or over         88\n7 under 18           10\n```\n:::\n:::\n\n\nBy using `sort=TRUE` you sort the groups from biggest to smallest group.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey |> count(how_old_are_you, sort = TRUE)  \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 x 2\n  how_old_are_you     n\n  <chr>           <int>\n1 25-34           11748\n2 35-44            9398\n3 45-54            3042\n4 18-24            1015\n5 55-64             931\n6 65 or over         88\n7 under 18           10\n```\n:::\n:::\n\n\nNow it is ordered on number. How can you order it on age group, how can we fix this? Order the categories in this variable. For this you have to construct a factor version of 'how_old_are_you'\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey <-\n  survey |>\n  mutate(age_category = factor(how_old_are_you)) \n```\n:::\n\n\nThen,show that they are different types (character vs. factor), but contain the same information\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey |>\n  select(how_old_are_you, age_category) |>\n  head() \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 x 2\n  how_old_are_you age_category\n  <chr>           <fct>       \n1 25-34           25-34       \n2 25-34           25-34       \n3 25-34           25-34       \n4 25-34           25-34       \n5 25-34           25-34       \n6 25-34           25-34       \n```\n:::\n:::\n\n\nReorder the factor variable now in a generic way (without a function call)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey <-\n  survey |>\n  mutate(age_category = relevel(age_category,\n                                             \"under 18\",\n                                             \"18-24\",\n                                             \"25-34\",\n                                             \"35-44\",\n                                             \"45-54\",\n                                             \"55-64\",\n                                             \"65 or over\"))\n```\n:::\n\n\nThe same result, but easier is the following:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey <-\n  survey |>\n  mutate(age_category = relevel(age_category,\n                                \"under 18\",\n                                \"18-24\"))\n```\n:::\n\n\nNow check if it looks as desired.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey|>\n  count(age_category)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 x 2\n  age_category     n\n  <fct>        <int>\n1 under 18        10\n2 18-24         1015\n3 25-34        11748\n4 35-44         9398\n5 45-54         3042\n6 55-64          931\n7 65 or over      88\n```\n:::\n:::\n\n\nSave this in a variable and l us research the age groups\n\n``` {r}\\\n#| warning: false\n#| echo: true\nage <- survey |> # save it in a variable\n  count(age_category)\n```\n\nPut it in a table directly.\n\n| age-category   | number   |\n|----------------|----------|\n| \\< 18          | 10       |\n| 18-24          | 1015     |\n| 25-34          | 11748    |\n| 35-44          | 9398     |\n| 45-54          | 3042     |\n| 55-64          | 931      |\n| \\> 64          | 88       |\n| -------------- | -------- |\n| Total          | 26232    |\n\nYou can also write it to Excel if this is easier for you. The info in quotation marks has to be changed to a folder that fits your set-up. Illustrate in Excel: data -\\> text to columns.\n\n    write_csv(age,\"C:/Users/FY125/Desktop/temp/Own tidy tuesday/age.csv\") \n\nMaybe this one works for you.\n\n    write_delim(age,\"C:/Users/FY125/Desktop/temp/Own tidy tuesday/age_delim.csv\", delim = \";\") \n\nThen you automatically get a nice csv. It depends on windows installation which of the two options work\n\n::: column-margin\nUse `knitr::kable()`, `kableExtra`, DataTable::DT()`,`gt`, apaTable` or `papaja` packages for example to write tables for articles directly!\n:::\n\n::: callout-important\nSo far so good - any questions?\n:::\n\n### Plotting\n\nPlotting would also be a good idea also for showing distributions.\n\n\n::: {.cell .caption-margin}\n\n```{.r .cell-code}\nsurvey |>\n  ggplot() +\n  geom_bar(aes(y = age_category),   # age_category variable on the y axis\n           color=\"black\", fill = \"white\")\n```\n\n::: {.cell-output-display}\n![Age categories and their numbers](10_TT_202301_files/figure-html/fig-agecat-1.png){#fig-agecat width=672}\n:::\n:::\n\n\nYou also can do it with the blue colorline filled with redcolor.\n\n\n::: {.cell .caption-margin}\n\n```{.r .cell-code}\nsurvey |>\n  ggplot() +\n  geom_bar(aes(y = age_category),   # age_category variable on the y axis\n           color=\"blue\", fill = \"red\")\n```\n\n::: {.cell-output-display}\n![Age categories and there numbers using colors](10_TT_202301_files/figure-html/fig-catcol-1.png){#fig-catcol width=672}\n:::\n:::\n\n\nBut, let us go back to first table and add title and change axis-titles now.\n\n\n::: {#fig-agecatdef .cell .caption-margin}\n\n```{.r .cell-code}\nsurvey |>\n  ggplot() +\n  geom_bar(aes(y = age_category),   # age_category variable on the y axis\n           color=\"black\", fill = \"white\") +\n  labs(x =\"Number of participants\", y = \"Age category\", fill = \"Age category\")\n```\n\n::: {.cell-output-display}\n![Participants age](10_TT_202301_files/figure-html/fig-agecatdef-1.png){#fig-agecatdef width=672}\n:::\n\nAge categories and there numbers\n:::\n\n\n### Question 4: make a dataframe with the variables age, gender, annual salary, currency, other_monetary_comp\n\nWe call the new dataframe dt and use the function `select` of the `tidyverse` package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- survey |> dplyr::select(age_category, gender, annual_salary, currency, other_monetary_comp)\n```\n:::\n\n\nLook in your environment if you see the new dataframe `df` with the five variables.\n\n*Question 5*: **What is the distribution of gender in percentages**\n\nUse the `df` data, count gender, make a new variable percent.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |>\n  count(gender) |> \n  mutate(percent = n/sum(n)*100) |> \n  dplyr::select(-n) # not yet rounded\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 x 2\n  gender                         percent\n  <chr>                            <dbl>\n1 Man                           18.1    \n2 Non-binary                     2.72   \n3 Other or prefer not to answer  1.02   \n4 Prefer not to answer           0.00381\n5 Woman                         77.6    \n6 <NA>                           0.564  \n```\n:::\n:::\n\n\nn is not-rounded. Show the percentage now rounded (`digits=3`)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |>\n  count(gender) |> \n  mutate(percent = round((n/sum(n)*100), digits = 3)) |> \n  dplyr::select(-n) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 x 2\n  gender                        percent\n  <chr>                           <dbl>\n1 Man                            18.1  \n2 Non-binary                      2.72 \n3 Other or prefer not to answer   1.02 \n4 Prefer not to answer            0.004\n5 Woman                          77.6  \n6 <NA>                            0.564\n```\n:::\n:::\n\n\nOf course, there are always better ways.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |>\n  count(gender) |> \n  mutate(percent = (n/sum(n))*100,\n         percent = round(percent,3)) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 x 3\n  gender                            n percent\n  <chr>                         <int>   <dbl>\n1 Man                            4743  18.1  \n2 Non-binary                      713   2.72 \n3 Other or prefer not to answer   268   1.02 \n4 Prefer not to answer              1   0.004\n5 Woman                         20359  77.6  \n6 <NA>                            148   0.564\n```\n:::\n:::\n\n\n::: column-margin\nRemember how we wrote this kind of table to Excel: try at home!\n:::\n\n### Question 6: Get the min, max, mean, sd, median, IQR and amount of missings for the variable annual salary\n\nTry first with one or two variables, to make it easy for yourself, for example the `mean`and the `median`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf|> \n  summarise(mean = mean(annual_salary),\n            median = median(annual_salary)) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 x 2\n     mean median\n    <dbl>  <dbl>\n1 145725.  76000\n```\n:::\n:::\n\n\nA different way that can be useful for multiple variables is this one.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npv <- df |> dplyr::select(annual_salary) |> \n  pivot_longer(cols = annual_salary, names_to = \"variable_name\", values_to = \"value\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndescriptive_stat <- pv |> \n  group_by(variable_name) |> \n  summarise(min = min(value, na.rm = TRUE),\n            max = max(value, na.rm = TRUE),\n            mean = mean(value, na.rm = TRUE),\n            sd   = sd(value, na.rm = TRUE),\n            median = median(value, na.rm = TRUE),\n            iqr = IQR(value, na.rm = TRUE),\n            miss   = sum(is.na(value)))\ndescriptive_stat\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 x 8\n  variable_name   min       max    mean       sd median   iqr  miss\n  <chr>         <dbl>     <dbl>   <dbl>    <dbl>  <dbl> <dbl> <int>\n1 annual_salary     0 870000000 145725. 5543526.  76000 56000     0\n```\n:::\n:::\n\n\nWhy do it like this? Because then you can use it for multiple variables. Now we can:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npv_2 <- df |> dplyr::select(annual_salary, other_monetary_comp) |>\n  pivot_longer(cols = c(annual_salary, other_monetary_comp), names_to = \"variable_name\", values_to = \"value\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndescriptive_stat_2 <- pv_2 |> \n  group_by(variable_name) |> \n  summarise(min = min(value, na.rm = TRUE),\n            max = max(value, na.rm = TRUE),\n            mean = mean(value, na.rm = TRUE),\n            sd   = sd(value, na.rm = TRUE),\n            median = median(value, na.rm = TRUE),\n            iqr = IQR(value, na.rm = TRUE),\n            miss   = sum(is.na(value))) \n\ndescriptive_stat_2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 x 8\n  variable_name         min       max    mean       sd median   iqr  miss\n  <chr>               <dbl>     <dbl>   <dbl>    <dbl>  <dbl> <dbl> <int>\n1 annual_salary           0 870000000 145725. 5543526.  76000 56000     0\n2 other_monetary_comp     0 120000000  18489.  861667.   2000 10000  6785\n```\n:::\n:::\n\n\n100 variables or even more variables at once: no problem! Try to write it to a csv!\n\n### Question 7: Plot the distribution of annual salary\n\nWe work out four ways. The first one is simple, but not very informative way. The second one doesn't work because it is a tibble not a vector. We show only the code of this one. In number three and four we filter to remove outliers above two different numbers.\n\n\n::: {#fig-annual .cell layout-ncol=\"3\"}\n\n```{.r .cell-code}\ndf |> pull(annual_salary) |> hist() # simple, but not yet very informative\n#df |> dplyr::select(annual_salary) |> hist() # select would not work because it is a tibble not a vector\ndf  |> filter(annual_salary < 1000000) |> pull(annual_salary) |> hist() # filter to remove outliers above 1000000\ndf  |> filter(annual_salary < 300000) |> pull(annual_salary) |> hist() \n```\n\n::: {.cell-output-display}\n![Simple non-informative distribution](10_TT_202301_files/figure-html/fig-annual-1.png){#fig-annual-1 width=672}\n:::\n\n::: {.cell-output-display}\n![Distribution with outliers above 1000000](10_TT_202301_files/figure-html/fig-annual-2.png){#fig-annual-2 width=672}\n:::\n\n::: {.cell-output-display}\n![Distribution with outliers above 300000](10_TT_202301_files/figure-html/fig-annual-3.png){#fig-annual-3 width=672}\n:::\n\nPlotting distributions annual salary\n:::\n\n\nIf you prefer using `ggplot` you can do it like this.\n\n    # not working for me\n    #| label: fig-ggplot\n    #| fig-cap: \"Plotting distributions annual salary using ggplot\"\n    df |>\n      filter(annual_salary < 300000) \n      ggplot() +\n      geom_histogram(aes(x = annual_salary), color = \"black\", fill=\"white\", binwidth=5000)\n\n### Question 8: Can we get a salary independent of currency?\n\nIn this case we take out the participants with only USD and CAD currency and converted their 'annual-salary'to USD.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconverted<- df |> filter(currency == \"USD\" | currency == \"CAD\") |>\n  mutate(\n  USD = convert_currencies(\n    price_start = annual_salary,\n    from = currency,\n    to = \"USD\",\n    date = as.Date(\"2019-12-14\"))\n  )\n```\n:::\n\n\nOr convert all the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconverted_all<- df |> filter(!currency %in% c(\"AUD/NZD\", \"Other\")) |>\n  mutate(\n    USD = convert_currencies(\n      price_start = annual_salary,\n      from = currency,\n      to = \"USD\",\n      date = lubridate::today())\n  )\n```\n:::\n\n\n### Question 9: Compare salary across genders?\n\nWe use the `converted-all` dataset, look for data lower than USD-300000 and show the mean\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconverted_all |> group_by(gender) |> filter(USD < 300000) |>\n  summarise(mean = mean(USD)) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 x 2\n  gender                           mean\n  <chr>                           <dbl>\n1 Man                           104494.\n2 Non-binary                     67571.\n3 Other or prefer not to answer  85085.\n4 Prefer not to answer           88000 \n5 Woman                          80420.\n6 <NA>                           93652.\n```\n:::\n:::\n\n\nWe plot this, and now we place it in the margin.\n\n\n::: {.cell .caption-margin}\n\n```{.r .cell-code}\nconverted_all |> filter(USD < 300000) |> group_by(gender) |> \n  ggplot(aes(x = as.factor(gender), y = USD)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![Salary across genders](10_TT_202301_files/figure-html/fig-annualggplot-1.png){#fig-annualggplot width=672}\n:::\n:::\n\n\n## References\n",
    "supporting": [
      "10_TT_202301_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}