{
  "hash": "dbffd7a33e3bc73fe6446fe845cc3f50",
  "result": {
    "markdown": "---\ntitle: \"Long to wide (and vv) transformations\"\nauthor: \"Sam Langton\"\ndate: \"2022-04-05\"\ncategories: [exploration, visualization]\nimage: \"Screenshot.png\"\n---\n\n\n## Introduction\n\nIn this session, Sam Langton demonstrated long to wide (and wide to long) transformations using functions available in the tidyr package using data from the London Fire Brigade (Langton, 2022).\n\n## Preparation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidytuesdayR)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(forcats)\nlibrary(ggplot2)\n```\n:::\n\n\nIdentify datasets available (fire service data).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntt_df <- tidytuesdayR::tt_load(\"2021-06-29\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tDownloading file 1 of 1: `animal_rescues.csv`\n```\n:::\n:::\n\n\nPull out the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_df <- tt_df$animal_rescues\n```\n:::\n\n\nSave for train working.\n\n```         \nHarrie: don't know what this means\nsave.image(\"data/train_working.Rdata\")\nload(\"data/train_working.Rdata\")\n```\n\nBasic cleaning.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_clean_df <- fire_df %>% \n  filter(cal_year < 2021) %>% \n  mutate(animal_group_broad = fct_lump(animal_group_parent, n = 5))\n```\n:::\n\n\n## Transformations\n\nCreate some wide data. Freq counts of incidents for each animal by year, then wide. 2021 is not complete. Note animal category is just for the demo!\n\nTake care, this is a crude recode.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_wide1_df <- fire_clean_df %>% \n  filter(cal_year < 2021) %>% \n  select(incident_number, cal_year, animal_group_broad) %>% \n  group_by(cal_year, animal_group_broad) %>% \n  summarise(yearly_count = n()) %>% \n  pivot_wider(names_from = cal_year, values_from = yearly_count)\n```\n:::\n\n\nNon-longitudinal example. Note the fiddly way of keeping zero counts. Requires an ungroup() and then complete(). There might be a better way of doing this!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_wide2_df <- fire_clean_df %>% \n  filter(cal_year == 2009) %>% \n  select(incident_number, animal_group_broad, property_category)  %>% \n  group_by(animal_group_broad, property_category) %>% \n  summarise(yearly_count = n()) %>% \n  ungroup() %>% \n  complete(animal_group_broad, property_category, fill = list(yearly_count = 0)) %>% \n  pivot_wider(names_from = property_category, values_from = yearly_count)\n```\n:::\n\n\nNested data / multilevel example.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_wards_df <- fire_clean_df %>%\n  group_by(borough_code, ward_code, cal_year) %>% \n  summarise(yearly_count = n()) %>% \n  ungroup() %>% \n  filter(ward_code != \"NULL\") %>% \n  arrange(borough_code, ward_code, cal_year)\n```\n:::\n\n\nMake wide for example, fill in zeros and arrange. Why interesting? Because it's nested levels, longitudinal and 'year' in the `var` names.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_wide3_df <- fire_wards_df %>% \n  arrange(cal_year) %>% \n  pivot_wider(names_from = cal_year, values_from = yearly_count, names_prefix = \"year_\") %>% \n  mutate_if(is.numeric, ~replace_na(., 0)) %>% \n  arrange(ward_code) \n```\n:::\n\n\nRemove things that might confuse people.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(fire_clean_df, fire_df, tt_df, fire_wards_df)\n```\n:::\n\n\n## References\n\nLangton, S. (2022, April). *NSC-R Workshops: NSC-R Tidy Tuesday. NSCR*. Retrieved from https://nscrweb.netlify.app/posts/2022-01-25-nsc-r-tidy-tuesday/\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}